<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Omar swap file</title><link href="http://omartrinidad.github.io/" rel="alternate"></link><link href="http://omartrinidad.github.io/feeds/Blog.atom.xml" rel="self"></link><id>http://omartrinidad.github.io/</id><updated>2013-07-18T00:00:00-05:00</updated><entry><title>Outliers</title><link href="http://omartrinidad.github.io/posts/2013/Jul/18/outliers/" rel="alternate"></link><updated>2013-07-18T00:00:00-05:00</updated><author><name>omartrinidad</name></author><id>tag:omartrinidad.github.io,2013-07-18:posts/2013/Jul/18/outliers/</id><summary type="html">&lt;h1&gt;My own history&lt;/h1&gt;
&lt;p&gt;As a kid I liked to play soccer. I was never the best player, but I neither was
the worst one. More or less each three years I had to be the new guy in the
school because my family was moving out. I remember in my school a skinny guy
who was a disaster with the ball. My family go out to Chiapas because my
grandfather inherited a house for my dad. Several years later I back to
Tabasco. My big surprise was that the clumsy and stubborn guy was the scorer.&lt;/p&gt;
&lt;p&gt;Later in the college, I read a essay named &lt;code&gt;Teach yourself programming in ten
years&lt;/code&gt;, I was so fortunate to read this material very early in my way. &lt;/p&gt;
&lt;p&gt;Today, I am not a hacker yet. I am a bad programmer, I feel I've been loosing
so much time.&lt;/p&gt;
&lt;h1&gt;Chapter one&lt;/h1&gt;
&lt;p&gt;It makes a difference where and when we grew up.&lt;/p&gt;
&lt;p&gt;Biologists often talk about the "ecology" of an organism: the tallest oak in
the forest is the tallest not just because it grew from the hardiest acorn; it
is the tallest also because no other trees blocked its sunlight, the soil
around it was deep and rich, no rabbit chewed through its bark as a sapling,
and no lumberjack cut it down before it matured. We all know that successful
people come from hardy seeds. But do we know enough about the sunlight that
warmed them, the soil in which they put down the roots, and the rabbits and
lumberjacks they were lucky enough to avoid?&lt;/p&gt;
&lt;h1&gt;Hockey players in Canada&lt;/h1&gt;
&lt;p&gt;In Canada the most of the successful hockey players born
in: January, February, and March.&lt;/p&gt;
&lt;p&gt;The explanation for this is quite simple. It has nothing to
do with astrology, nor is there anything magical about the 
first three months of the year. It's simply that in Canada
the eligibility cutoff for age-class hockey is January 1. A
boy who turns ten on January 2, then, could be playing alongside
someone who doesn't turn ten until the end of the year.&lt;/p&gt;
&lt;h1&gt;The three lessons of Joe Flom&lt;/h1&gt;
&lt;p&gt;Those three things -autonomy, complexity, and a connection between effort and
reward- are, most people agree, the three qualities that work has to have if it
is to be satisfying. It is not how much money we make that ultimately makes us
happy between nine and five. It's wheter our work fulfills us.&lt;/p&gt;</summary><category term="books"></category><category term="Outliers"></category><category term="Malcolm Gladwell"></category></entry><entry><title>GUI building with Matlab</title><link href="http://omartrinidad.github.io/posts/2013/Apr/25/gui-building-with-matlab/" rel="alternate"></link><updated>2013-04-25T00:00:00-05:00</updated><author><name>omartrinidad</name></author><id>tag:omartrinidad.github.io,2013-04-25:posts/2013/Apr/25/gui-building-with-matlab/</id><summary type="html">&lt;p&gt;The first lesson I've learned about GUI development is: &lt;em&gt;create a mockup&lt;/em&gt;. The
first step in this little tutorial it will be draw our objective.&lt;/p&gt;
&lt;p&gt;-IMAGEN-&lt;/p&gt;
&lt;p&gt;Here, we have a simple GUI, with a left panel and an axe.&lt;/p&gt;
&lt;h1&gt;Why avoid GUIDE (GUI development environment)&lt;/h1&gt;
&lt;p&gt;With GUIDE is possible design UIs graphically, however instead of making it
easier complicates it. In order to have a better control and understanding of
the things I prefer create the GUI programmatically.&lt;/p&gt;
&lt;h1&gt;Create GUI programmatically&lt;/h1&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;varargout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mygui&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;Brief&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;
    &lt;span class="nx"&gt;sizeScreen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ScreenSize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;hmf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sizeScreen&lt;/span&gt;&lt;span class="p"&gt;,...&lt;/span&gt;
           &lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Mammogram GUI&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,...&lt;/span&gt;
           &lt;span class="s1"&gt;&amp;#39;NumberTitle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,...&lt;/span&gt;
           &lt;span class="s1"&gt;&amp;#39;MenuBar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the code above we have create a &lt;em&gt;very&lt;/em&gt; basic window.&lt;/p&gt;
&lt;h1&gt;Adding controls with &lt;code&gt;uicontrol&lt;/code&gt;&lt;/h1&gt;
&lt;h1&gt;Adding menues with &lt;code&gt;uimenus&lt;/code&gt;&lt;/h1&gt;
&lt;h1&gt;Callbacks and functions&lt;/h1&gt;
&lt;h1&gt;Share data&lt;/h1&gt;
&lt;p&gt;The most easy way to share data is using &lt;em&gt;nested functions&lt;/em&gt;. With this approach
we can &lt;/p&gt;</summary><category term="GUI building"></category><category term="Matlab"></category><category term="GUIDE"></category></entry><entry><title>Software Debugging by Udacity</title><link href="http://omartrinidad.github.io/posts/2013/Apr/25/software-debugging-by-udacity/" rel="alternate"></link><updated>2013-04-25T00:00:00-05:00</updated><author><name>omartrinidad</name></author><id>tag:omartrinidad.github.io,2013-04-25:posts/2013/Apr/25/software-debugging-by-udacity/</id><summary type="html">&lt;p&gt;I am taking the Software Debugging course by Udacity. In order to take this
course seriously I will do a kind of log.&lt;/p&gt;
&lt;p&gt;I guess this tactic will help me not to leave the courses I'll take. &lt;/p&gt;
&lt;h1&gt;What is a bug?&lt;/h1&gt;
&lt;p&gt;A bug is an error no visible. &lt;/p&gt;</summary><category term="MOOC"></category><category term="software debugging"></category><category term="Python"></category><category term="Udacity"></category></entry><entry><title>Vim Notes</title><link href="http://omartrinidad.github.io/posts/2013/Apr/25/vim-notes/" rel="alternate"></link><updated>2013-04-25T00:00:00-05:00</updated><author><name>omartrinidad</name></author><id>tag:omartrinidad.github.io,2013-04-25:posts/2013/Apr/25/vim-notes/</id><summary type="html">&lt;p&gt;I used Vim since 2011. But only since 2013 I started using Vim in the right way.
When I write &lt;em&gt;in the right way&lt;/em&gt; I mean I started to think like a real &lt;em&gt;vimer&lt;/em&gt;. In
this post I want to write a little bit of things I am learning each day:&lt;/p&gt;
&lt;h1&gt;Changes in my &lt;code&gt;.vimrc&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;How to avoid use keyboard arrows&lt;/h2&gt;
&lt;p&gt;Use the keys &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, and &lt;code&gt;l&lt;/code&gt; is one of the more esoteric features of
&lt;code&gt;Vim&lt;/code&gt;, but also is one of the most powerful. In order to avoid use the normal
arrow keys is possible lock them.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nx"&gt;nnoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;up&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;nnoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;down&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;nnoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;nnoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;inoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;up&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;inoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;down&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;inoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;inoremap&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Vim Text Objects.&lt;/h1&gt;
&lt;h1&gt;Vim System Clipboard&lt;/h1&gt;
&lt;h1&gt;mappings&lt;/h1&gt;
&lt;h2&gt;&lt;Leader&gt; key&lt;/h2&gt;
&lt;p&gt;-&amp;gt; I and A
-&amp;gt; zz, zt, zb
-&amp;gt; Ctrl N
-&amp;gt; Ctrl B and Ctrl F
-&amp;gt; ctags ?
-&amp;gt; Ctrl E and Ctrl Y
-&amp;gt; Ctrl A and Ctrl X
-&amp;gt; vim match
-&amp;gt; gq} and y}
-&amp;gt; Vim visual mode
-&amp;gt; (, ), { and }
-&amp;gt; ''
-&amp;gt; c$, c4w. r [normal mode]
-&amp;gt; ca" or ci" -&amp;gt; ci) or ca)
-&amp;gt; ya&amp;lt; or ya&amp;gt; or yi&amp;lt; or yi&amp;gt;&lt;/p&gt;
&lt;p&gt;OpenOffice
:set tw=0 wrap linebreak&lt;/p&gt;</summary><category term="Vim"></category></entry></feed>